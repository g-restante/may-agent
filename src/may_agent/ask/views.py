from fastapi import APIRouter, HTTPException
from pydantic import BaseModel
from ask import service
import logging

# Configurazione del logger
logger = logging.getLogger(__name__)

router = APIRouter()

class AnswerModel(BaseModel):
    """
    Response model for the ask endpoint.
    """
    code: str
    body: str

@router.get("", response_model=AnswerModel, status_code=200)
async def ask(question: str) -> AnswerModel:
    """
    Handles a GET request to answer a question using the AI service.

    Args:
        question (str): The question to be answered.

    Returns:
        AnswerModel: The response containing the status code and the answer.

    Raises:
        HTTPException: If the service fails to generate an answer.
    """
    logger.info(f"Received question: {question}")
    try:
        answer = service.ask(question)
        if answer is None:
            logger.warning("No answer generated by the service.")
            raise HTTPException(
                status_code=500,
                detail="Unable to generate an answer. Please try again later."
            )
        logger.info("Answer generated successfully.")
        return AnswerModel(code="success", body=answer)
    except Exception as e:
        logger.error(f"Error while processing the question: {e}")
        raise HTTPException(
            status_code=500,
            detail="An unexpected error occurred. Please try again later."
        )